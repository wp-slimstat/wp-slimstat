{"version":3,"file":"ScriptDuplication.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/extras/ScriptDuplication.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Handlers from '../handlers/handlers.js';\n\n// Ignore modules smaller than an absolute threshold.\nconst ABSOLUTE_SIZE_THRESHOLD_BYTES = 1024 * 0.5;\n// Ignore modules smaller than a % size of largest copy of the module.\nconst RELATIVE_SIZE_THRESHOLD = 0.1;\n\ntype GeneratedFileSizes = {\n  errorMessage: string,\n}|{files: Record<string, number>, unmappedBytes: number, totalBytes: number};\n\n/**\n * Using a script's contents and source map, attribute every generated byte to an authored source file.\n */\nexport function computeGeneratedFileSizes(script: Handlers.ModelHandlers.Scripts.Script): GeneratedFileSizes {\n  if (!script.sourceMap) {\n    throw new Error('expected source map');\n  }\n\n  const map = script.sourceMap;\n  const content = script.content ?? '';\n  const contentLength = content.length;\n  const lines = content.split('\\n');\n  const files: Record<string, number> = {};\n  const totalBytes = contentLength;\n  let unmappedBytes = totalBytes;\n\n  const lastGeneratedColumnMap = computeLastGeneratedColumnMap(script.sourceMap);\n\n  for (const mapping of map.mappings()) {\n    const source = mapping.sourceURL;\n    const lineNum = mapping.lineNumber;\n    const colNum = mapping.columnNumber;\n    const lastColNum = lastGeneratedColumnMap.get(mapping);\n\n    // Webpack sometimes emits null mappings.\n    // https://github.com/mozilla/source-map/pull/303\n    if (!source) {\n      continue;\n    }\n\n    // Lines and columns are zero-based indices. Visually, lines are shown as a 1-based index.\n\n    const line = lines[lineNum];\n    if (line === null || line === undefined) {\n      const errorMessage = `${map.url()} mapping for line out of bounds: ${lineNum + 1}`;\n      return {errorMessage};\n    }\n\n    if (colNum > line.length) {\n      const errorMessage = `${map.url()} mapping for column out of bounds: ${lineNum + 1}:${colNum}`;\n      return {errorMessage};\n    }\n\n    let mappingLength = 0;\n    if (lastColNum !== undefined) {\n      if (lastColNum > line.length) {\n        const errorMessage = `${map.url()} mapping for last column out of bounds: ${lineNum + 1}:${lastColNum}`;\n        return {errorMessage};\n      }\n      mappingLength = lastColNum - colNum;\n    } else {\n      // Add +1 to account for the newline.\n      mappingLength = line.length - colNum + 1;\n    }\n    files[source] = (files[source] || 0) + mappingLength;\n    unmappedBytes -= mappingLength;\n  }\n\n  return {\n    files,\n    unmappedBytes,\n    totalBytes,\n  };\n}\n\ninterface SourceData {\n  source: string;\n  resourceSize: number;\n}\n\nexport function normalizeSource(source: string): string {\n  // Trim trailing question mark - b/c webpack.\n  source = source.replace(/\\?$/, '');\n\n  // Normalize paths for dependencies by only keeping everything after the last `node_modules`.\n  const lastNodeModulesIndex = source.lastIndexOf('node_modules');\n  if (lastNodeModulesIndex !== -1) {\n    source = source.substring(lastNodeModulesIndex);\n  }\n\n  return source;\n}\n\nfunction shouldIgnoreSource(source: string): boolean {\n  // Ignore bundle overhead.\n  if (source.includes('webpack/bootstrap')) {\n    return true;\n  }\n  if (source.includes('(webpack)/buildin')) {\n    return true;\n  }\n\n  // Ignore webpack module shims, i.e. aliases of the form `module.exports = window.jQuery`\n  if (source.includes('external ')) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * The key is a source map `sources` entry (these are URLs/file paths), but normalized\n * via `normalizeSource`.\n *\n * The value is an object with an entry for every script that has a source map which\n * denotes that this source was used, along with the estimated resource size it takes\n * up in the script.\n */\nexport type ScriptDuplication = Map<string, {\n  /**\n   * This is the sum of all (but one) `attributedSize` in `scripts`.\n   *\n   * One copy of this module is treated as the canonical version - the rest will\n   * have non-zero `wastedBytes`. The canonical copy is the first entry of\n   * `scripts`.\n   *\n   * In the case of all copies being the same version, all sizes are\n   * equal and the selection doesn't matter (ignoring compression ratios). When\n   * the copies are different versions, it does matter. Ideally the newest\n   * version would be the canonical copy, but version information is not present.\n   * Instead, size is used as a heuristic for latest version. This makes the\n   * value here conserative in its estimation.\n   */\n  estimatedDuplicateBytes: number,\n  duplicates: Array<{\n    script: Handlers.ModelHandlers.Scripts.Script,\n    /** The number of bytes in the script bundle that map back to this module. */\n    attributedSize: number,\n  }>,\n}>;\n\n/**\n * Sorts each array within @see ScriptDuplication by attributedSize, drops information\n * on sources that are too small, and calculates esimatedDuplicateBytes.\n */\nexport function normalizeDuplication(duplication: ScriptDuplication): void {\n  for (const [key, data] of duplication) {\n    // Sort by resource size.\n    data.duplicates.sort((a, b) => b.attributedSize - a.attributedSize);\n\n    // Ignore modules smaller than a % size of largest.\n    if (data.duplicates.length > 1) {\n      const largestResourceSize = data.duplicates[0].attributedSize;\n      data.duplicates = data.duplicates.filter(duplicate => {\n        const percentSize = duplicate.attributedSize / largestResourceSize;\n        return percentSize >= RELATIVE_SIZE_THRESHOLD;\n      });\n    }\n\n    // Ignore modules smaller than an absolute threshold.\n    data.duplicates = data.duplicates.filter(duplicate => duplicate.attributedSize >= ABSOLUTE_SIZE_THRESHOLD_BYTES);\n\n    // Delete any that now don't have multiple entries.\n    if (data.duplicates.length <= 1) {\n      duplication.delete(key);\n      continue;\n    }\n\n    data.estimatedDuplicateBytes = data.duplicates.slice(1).reduce((acc, cur) => acc + cur.attributedSize, 0);\n  }\n}\n\nfunction computeLastGeneratedColumnMap(map: SDK.SourceMap.SourceMap): Map<SDK.SourceMap.SourceMapEntry, number> {\n  const result = new Map<SDK.SourceMap.SourceMapEntry, number>();\n\n  const mappings = map.mappings();\n  for (let i = 0; i < mappings.length - 1; i++) {\n    const mapping = mappings[i];\n    const nextMapping = mappings[i + 1];\n    if (mapping.lineNumber === nextMapping.lineNumber) {\n      result.set(mapping, nextMapping.columnNumber);\n    }\n  }\n\n  // Now, all but the last mapping on each line will have 'lastColumnNumber' set to a number.\n  return result;\n}\n\n/**\n * Returns a @see ScriptDuplication for the given collection of script contents + source maps.\n */\nexport function computeScriptDuplication(scriptsData: Handlers.ModelHandlers.Scripts.ScriptsData): ScriptDuplication {\n  const sizesMap = new Map<Handlers.ModelHandlers.Scripts.Script, GeneratedFileSizes>();\n  for (const script of scriptsData.scripts) {\n    if (script.content && script.sourceMap) {\n      sizesMap.set(script, computeGeneratedFileSizes(script));\n    }\n  }\n\n  const sourceDatasMap = new Map<Handlers.ModelHandlers.Scripts.Script, SourceData[]>();\n\n  // Determine size of each `sources` entry.\n  for (const [script, sizes] of sizesMap) {\n    if (!script.sourceMap) {\n      continue;\n    }\n\n    if ('errorMessage' in sizes) {\n      console.error(sizes.errorMessage);\n      continue;\n    }\n\n    const sourceDataArray: SourceData[] = [];\n    sourceDatasMap.set(script, sourceDataArray);\n\n    const sources = script.sourceMap.sourceURLs();\n    for (let i = 0; i < sources.length; i++) {\n      if (shouldIgnoreSource(sources[i])) {\n        continue;\n      }\n\n      const sourceSize = sizes.files[sources[i]];\n      sourceDataArray.push({\n        source: normalizeSource(sources[i]),\n        resourceSize: sourceSize,\n      });\n    }\n  }\n\n  const duplication: ScriptDuplication = new Map();\n  for (const [script, sourceDataArray] of sourceDatasMap) {\n    for (const sourceData of sourceDataArray) {\n      let data = duplication.get(sourceData.source);\n      if (!data) {\n        data = {estimatedDuplicateBytes: 0, duplicates: []};\n        duplication.set(sourceData.source, data);\n      }\n      data.duplicates.push({\n        script,\n        attributedSize: sourceData.resourceSize,\n      });\n    }\n  }\n\n  normalizeDuplication(duplication);\n\n  // Sort by estimated savings.\n  return new Map([...duplication].sort((a, b) => b[1].estimatedDuplicateBytes - a[1].estimatedDuplicateBytes));\n}\n"]}