{"version":3,"file":"CPUNode.js","sourceRoot":"","sources":["../../../../../../../../front_end/models/trace/lantern/graph/CPUNode.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC,MAAM,OAAsC,SAAQ,QAAW;IAC7D,MAAM,CAAqB;IAC3B,YAAY,CAAuB;IACnC,cAAc,CAAmB;IAEjC,YAAY,WAA+B,EAAE,cAAoC,EAAE,EAAE,cAAuB;QAC1G,MAAM,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC;QACtD,KAAK,CAAC,MAAM,CAAC,CAAC;QAEd,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAED,IAAa,IAAI;QACf,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;IAC5B,CAAC;IAED,IAAa,SAAS;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;IACxB,CAAC;IAED,IAAa,OAAO;QAClB,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IAC1C,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;IACvC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED;;OAEG;IACH,qBAAqB;QACnB,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;QAC/B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,IAAI,KAAK,CAAC,IAAI,KAAK,gBAAgB,EAAE,CAAC;gBACpC,SAAS;YACX,CAAC;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;gBAC1B,SAAS;YACX,CAAC;YACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,yBAAyB;QAChC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC1E,CAAC;CACF;AAED,OAAO,EAAC,OAAO,EAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Lantern from '../types/types.js';\n\nimport {BaseNode} from './BaseNode.js';\n\nclass CPUNode<T = Lantern.AnyNetworkObject> extends BaseNode<T> {\n  _event: Lantern.TraceEvent;\n  _childEvents: Lantern.TraceEvent[];\n  correctedEndTs: number|undefined;\n\n  constructor(parentEvent: Lantern.TraceEvent, childEvents: Lantern.TraceEvent[] = [], correctedEndTs?: number) {\n    const nodeId = `${parentEvent.tid}.${parentEvent.ts}`;\n    super(nodeId);\n\n    this._event = parentEvent;\n    this._childEvents = childEvents;\n    this.correctedEndTs = correctedEndTs;\n  }\n\n  override get type(): 'cpu' {\n    return BaseNode.types.CPU;\n  }\n\n  override get startTime(): number {\n    return this._event.ts;\n  }\n\n  override get endTime(): number {\n    if (this.correctedEndTs) {\n      return this.correctedEndTs;\n    }\n    return this._event.ts + this._event.dur;\n  }\n\n  get duration(): number {\n    return this.endTime - this.startTime;\n  }\n\n  get event(): Lantern.TraceEvent {\n    return this._event;\n  }\n\n  get childEvents(): Lantern.TraceEvent[] {\n    return this._childEvents;\n  }\n\n  /**\n   * Returns true if this node contains a Layout task.\n   */\n  didPerformLayout(): boolean {\n    return this._childEvents.some(evt => evt.name === 'Layout');\n  }\n\n  /**\n   * Returns the script URLs that had their EvaluateScript events occur in this task.\n   */\n  getEvaluateScriptURLs(): Set<string> {\n    const urls = new Set<string>();\n    for (const event of this._childEvents) {\n      if (event.name !== 'EvaluateScript') {\n        continue;\n      }\n      if (!event.args.data?.url) {\n        continue;\n      }\n      urls.add(event.args.data.url);\n    }\n\n    return urls;\n  }\n\n  override cloneWithoutRelationships(): CPUNode {\n    return new CPUNode(this._event, this._childEvents, this.correctedEndTs);\n  }\n}\n\nexport {CPUNode};\n"]}