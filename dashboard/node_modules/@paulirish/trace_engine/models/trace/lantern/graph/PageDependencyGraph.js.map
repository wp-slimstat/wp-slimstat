{"version":3,"file":"PageDependencyGraph.js","sourceRoot":"","sources":["../../../../../../../../front_end/models/trace/lantern/graph/PageDependencyGraph.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Core from '../core/core.js';\nimport type * as Lantern from '../types/types.js';\n\nimport type {Node} from './BaseNode.js';\nimport {CPUNode} from './CPUNode.js';\nimport {NetworkNode} from './NetworkNode.js';\n\n// COMPAT: m71+ We added RunTask to `disabled-by-default-lighthouse`\nconst SCHEDULABLE_TASK_TITLE_LH = 'RunTask';\n// m69-70 DoWork is different and we now need RunTask, see https://bugs.chromium.org/p/chromium/issues/detail?id=871204#c11\nconst SCHEDULABLE_TASK_TITLE_ALT1 = 'ThreadControllerImpl::RunTask';\n// In m66-68 refactored to this task title, https://crrev.com/c/883346\nconst SCHEDULABLE_TASK_TITLE_ALT2 = 'ThreadControllerImpl::DoWork';\n// m65 and earlier\nconst SCHEDULABLE_TASK_TITLE_ALT3 = 'TaskQueueManager::ProcessTaskFromWorkQueue';\n\ninterface NetworkNodeOutput {\n  nodes: NetworkNode[];\n  idToNodeMap: Map<string, NetworkNode>;\n  urlToNodeMap: Map<string, NetworkNode[]>;\n  frameIdToNodeMap: Map<string, NetworkNode|null>;\n}\n\n// Shorter tasks have negligible impact on simulation results.\nconst SIGNIFICANT_DUR_THRESHOLD_MS = 10;\n\n// TODO: video files tend to be enormous and throw off all graph traversals, move this ignore\n//    into estimation logic when we use the dependency graph for other purposes.\nconst IGNORED_MIME_TYPES_REGEX = /^video/;\n\nclass PageDependencyGraph {\n  static getNetworkInitiators(request: Lantern.NetworkRequest): string[] {\n    if (!request.initiator) {\n      return [];\n    }\n    if (request.initiator.url) {\n      return [request.initiator.url];\n    }\n    if (request.initiator.type === 'script') {\n      // Script initiators have the stack of callFrames from all functions that led to this request.\n      // If async stacks are enabled, then the stack will also have the parent functions that asynchronously\n      // led to this request chained in the `parent` property.\n      const scriptURLs = new Set<string>();\n      let stack = request.initiator.stack;\n      while (stack) {\n        const callFrames = stack.callFrames || [];\n        for (const frame of callFrames) {\n          if (frame.url) {\n            scriptURLs.add(frame.url);\n          }\n        }\n\n        stack = stack.parent;\n      }\n\n      return Array.from(scriptURLs);\n    }\n\n    return [];\n  }\n\n  static getNetworkNodeOutput(networkRequests: Lantern.NetworkRequest[]): NetworkNodeOutput {\n    const nodes: NetworkNode[] = [];\n    const idToNodeMap = new Map<string, NetworkNode>();\n    const urlToNodeMap = new Map<string, NetworkNode[]>();\n    const frameIdToNodeMap = new Map<string, NetworkNode|null>();\n\n    networkRequests.forEach(request => {\n      if (IGNORED_MIME_TYPES_REGEX.test(request.mimeType)) {\n        return;\n      }\n      if (request.fromWorker) {\n        return;\n      }\n\n      // Network requestIds can be duplicated for an unknown reason\n      // Suffix all subsequent requests with `:duplicate` until it's unique\n      // NOTE: This should never happen with modern NetworkRequest library, but old fixtures\n      // might still have this issue.\n      while (idToNodeMap.has(request.requestId)) {\n        request.requestId += ':duplicate';\n      }\n\n      const node = new NetworkNode(request);\n      nodes.push(node);\n\n      const urlList = urlToNodeMap.get(request.url) || [];\n      urlList.push(node);\n\n      idToNodeMap.set(request.requestId, node);\n      urlToNodeMap.set(request.url, urlList);\n\n      // If the request was for the root document of an iframe, save an entry in our\n      // map so we can link up the task `args.data.frame` dependencies later in graph creation.\n      if (request.frameId && request.resourceType === 'Document' && request.documentURL === request.url) {\n        // If there's ever any ambiguity, permanently set the value to `false` to avoid loops in the graph.\n        const value = frameIdToNodeMap.has(request.frameId) ? null : node;\n        frameIdToNodeMap.set(request.frameId, value);\n      }\n    });\n\n    return {nodes, idToNodeMap, urlToNodeMap, frameIdToNodeMap};\n  }\n\n  static isScheduleableTask(evt: Lantern.TraceEvent): boolean {\n    return evt.name === SCHEDULABLE_TASK_TITLE_LH || evt.name === SCHEDULABLE_TASK_TITLE_ALT1 ||\n        evt.name === SCHEDULABLE_TASK_TITLE_ALT2 || evt.name === SCHEDULABLE_TASK_TITLE_ALT3;\n  }\n\n  /**\n   * There should *always* be at least one top level event, having 0 typically means something is\n   * drastically wrong with the trace and we should just give up early and loudly.\n   */\n  static assertHasToplevelEvents(events: Lantern.TraceEvent[]): void {\n    const hasToplevelTask = events.some(this.isScheduleableTask);\n    if (!hasToplevelTask) {\n      throw new Core.LanternError('Could not find any top level events');\n    }\n  }\n\n  static getCPUNodes(mainThreadEvents: Lantern.TraceEvent[]): CPUNode[] {\n    const nodes: CPUNode[] = [];\n    let i = 0;\n\n    PageDependencyGraph.assertHasToplevelEvents(mainThreadEvents);\n\n    while (i < mainThreadEvents.length) {\n      const evt = mainThreadEvents[i];\n      i++;\n\n      // Skip all trace events that aren't schedulable tasks with sizable duration\n      if (!PageDependencyGraph.isScheduleableTask(evt) || !evt.dur) {\n        continue;\n      }\n\n      let correctedEndTs: number|undefined = undefined;\n\n      // Capture all events that occurred within the task\n      const children: Lantern.TraceEvent[] = [];\n      for (const endTime = evt.ts + evt.dur; i < mainThreadEvents.length && mainThreadEvents[i].ts < endTime; i++) {\n        const event = mainThreadEvents[i];\n\n        // Temporary fix for a Chrome bug where some RunTask events can be overlapping.\n        // We correct that here be ensuring each RunTask ends at least 1 microsecond before the next\n        // https://github.com/GoogleChrome/lighthouse/issues/15896\n        // https://issues.chromium.org/issues/329678173\n        if (PageDependencyGraph.isScheduleableTask(event) && event.dur) {\n          correctedEndTs = event.ts - 1;\n          break;\n        }\n\n        children.push(event);\n      }\n\n      nodes.push(new CPUNode(evt, children, correctedEndTs));\n    }\n\n    return nodes;\n  }\n\n  static linkNetworkNodes(rootNode: NetworkNode, networkNodeOutput: NetworkNodeOutput): void {\n    networkNodeOutput.nodes.forEach(node => {\n      const directInitiatorRequest = node.request.initiatorRequest || rootNode.request;\n      const directInitiatorNode = networkNodeOutput.idToNodeMap.get(directInitiatorRequest.requestId) || rootNode;\n      const canDependOnInitiator = !directInitiatorNode.isDependentOn(node) && node.canDependOn(directInitiatorNode);\n      const initiators = PageDependencyGraph.getNetworkInitiators(node.request);\n      if (initiators.length) {\n        initiators.forEach(initiator => {\n          const parentCandidates = networkNodeOutput.urlToNodeMap.get(initiator) || [];\n          // Only add the edge if the parent is unambiguous with valid timing and isn't circular.\n          if (parentCandidates.length === 1 && parentCandidates[0].startTime <= node.startTime &&\n              !parentCandidates[0].isDependentOn(node)) {\n            node.addDependency(parentCandidates[0]);\n          } else if (canDependOnInitiator) {\n            directInitiatorNode.addDependent(node);\n          }\n        });\n      } else if (canDependOnInitiator) {\n        directInitiatorNode.addDependent(node);\n      }\n\n      // Make sure the nodes are attached to the graph if the initiator information was invalid.\n      if (node !== rootNode && node.getDependencies().length === 0 && node.canDependOn(rootNode)) {\n        node.addDependency(rootNode);\n      }\n\n      if (!node.request.redirects) {\n        return;\n      }\n\n      const redirects = [...node.request.redirects, node.request];\n      for (let i = 1; i < redirects.length; i++) {\n        const redirectNode = networkNodeOutput.idToNodeMap.get(redirects[i - 1].requestId);\n        const actualNode = networkNodeOutput.idToNodeMap.get(redirects[i].requestId);\n        if (actualNode && redirectNode) {\n          actualNode.addDependency(redirectNode);\n        }\n      }\n    });\n  }\n\n  static linkCPUNodes(rootNode: Node, networkNodeOutput: NetworkNodeOutput, cpuNodes: CPUNode[]): void {\n    const linkableResourceTypes = new Set<Lantern.ResourceType|undefined>([\n      'XHR',\n      'Fetch',\n      'Script',\n    ]);\n\n    function addDependentNetworkRequest(cpuNode: CPUNode, reqId: string): void {\n      const networkNode = networkNodeOutput.idToNodeMap.get(reqId);\n      if (!networkNode ||\n          // Ignore all network nodes that started before this CPU task started\n          // A network request that started earlier could not possibly have been started by this task\n          networkNode.startTime <= cpuNode.startTime) {\n        return;\n      }\n      const {request} = networkNode;\n      const resourceType = request.resourceType || request.redirectDestination?.resourceType;\n      if (!linkableResourceTypes.has(resourceType)) {\n        // We only link some resources to CPU nodes because we observe LCP simulation\n        // regressions when including images, etc.\n        return;\n      }\n      cpuNode.addDependent(networkNode);\n    }\n\n    /**\n     * If the node has an associated frameId, then create a dependency on the root document request\n     * for the frame. The task obviously couldn't have started before the frame was even downloaded.\n     */\n    function addDependencyOnFrame(cpuNode: CPUNode, frameId: string|undefined): void {\n      if (!frameId) {\n        return;\n      }\n      const networkNode = networkNodeOutput.frameIdToNodeMap.get(frameId);\n      if (!networkNode) {\n        return;\n      }\n      // Ignore all network nodes that started after this CPU task started\n      // A network request that started after could not possibly be required this task\n      if (networkNode.startTime >= cpuNode.startTime) {\n        return;\n      }\n      cpuNode.addDependency(networkNode);\n    }\n\n    function addDependencyOnUrl(cpuNode: CPUNode, url: string): void {\n      if (!url) {\n        return;\n      }\n      // Allow network requests that end up to 100ms before the task started\n      // Some script evaluations can start before the script finishes downloading\n      const minimumAllowableTimeSinceNetworkNodeEnd = -100 * 1000;\n      const candidates = networkNodeOutput.urlToNodeMap.get(url) || [];\n\n      let minCandidate = null;\n      let minDistance = Infinity;\n      // Find the closest request that finished before this CPU task started\n      for (const candidate of candidates) {\n        // Explicitly ignore all requests that started after this CPU node\n        // A network request that started after this task started cannot possibly be a dependency\n        if (cpuNode.startTime <= candidate.startTime) {\n          return;\n        }\n\n        const distance = cpuNode.startTime - candidate.endTime;\n        if (distance >= minimumAllowableTimeSinceNetworkNodeEnd && distance < minDistance) {\n          minCandidate = candidate;\n          minDistance = distance;\n        }\n      }\n\n      if (!minCandidate) {\n        return;\n      }\n      cpuNode.addDependency(minCandidate);\n    }\n\n    const timers = new Map<string, CPUNode>();\n    for (const node of cpuNodes) {\n      for (const evt of node.childEvents) {\n        if (!evt.args.data) {\n          continue;\n        }\n\n        const argsUrl = evt.args.data.url;\n        const stackTraceUrls = (evt.args.data.stackTrace || []).map(l => l.url).filter(Boolean);\n\n        switch (evt.name) {\n          case 'TimerInstall':\n            // @ts-expect-error - 'TimerInstall' event means timerId exists.\n            timers.set(evt.args.data.timerId, node);\n            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));\n            break;\n          case 'TimerFire': {\n            // @ts-expect-error - 'TimerFire' event means timerId exists.\n            const installer = timers.get(evt.args.data.timerId);\n            if (!installer || installer.endTime > node.startTime) {\n              break;\n            }\n            installer.addDependent(node);\n            break;\n          }\n\n          case 'InvalidateLayout':\n          case 'ScheduleStyleRecalculation':\n            addDependencyOnFrame(node, evt.args.data.frame);\n            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));\n            break;\n\n          case 'EvaluateScript':\n            addDependencyOnFrame(node, evt.args.data.frame);\n            // @ts-expect-error - 'EvaluateScript' event means argsUrl is defined.\n            addDependencyOnUrl(node, argsUrl);\n            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));\n            break;\n\n          case 'XHRReadyStateChange':\n            // Only create the dependency if the request was completed\n            // 'XHRReadyStateChange' event means readyState is defined.\n            if (evt.args.data.readyState !== 4) {\n              break;\n            }\n\n            // @ts-expect-error - 'XHRReadyStateChange' event means argsUrl is defined.\n            addDependencyOnUrl(node, argsUrl);\n            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));\n            break;\n\n          case 'FunctionCall':\n          case 'v8.compile':\n            addDependencyOnFrame(node, evt.args.data.frame);\n            // @ts-expect-error - events mean argsUrl is defined.\n            addDependencyOnUrl(node, argsUrl);\n            break;\n\n          case 'ParseAuthorStyleSheet':\n            addDependencyOnFrame(node, evt.args.data.frame);\n            // @ts-expect-error - 'ParseAuthorStyleSheet' event means styleSheetUrl is defined.\n            addDependencyOnUrl(node, evt.args.data.styleSheetUrl);\n            break;\n\n          case 'ResourceSendRequest':\n            addDependencyOnFrame(node, evt.args.data.frame);\n            // @ts-expect-error - 'ResourceSendRequest' event means requestId is defined.\n            addDependentNetworkRequest(node, evt.args.data.requestId);\n            stackTraceUrls.forEach(url => addDependencyOnUrl(node, url));\n            break;\n        }\n      }\n\n      // Nodes starting before the root node cannot depend on it.\n      if (node.getNumberOfDependencies() === 0 && node.canDependOn(rootNode)) {\n        node.addDependency(rootNode);\n      }\n    }\n\n    // Second pass to prune the graph of short tasks.\n    const minimumEvtDur = SIGNIFICANT_DUR_THRESHOLD_MS * 1000;\n    let foundFirstLayout = false;\n    let foundFirstPaint = false;\n    let foundFirstParse = false;\n\n    for (const node of cpuNodes) {\n      // Don't prune if event is the first ParseHTML/Layout/Paint.\n      // See https://github.com/GoogleChrome/lighthouse/issues/9627#issuecomment-526699524 for more.\n      let isFirst = false;\n      if (!foundFirstLayout && node.childEvents.some(evt => evt.name === 'Layout')) {\n        isFirst = foundFirstLayout = true;\n      }\n      if (!foundFirstPaint && node.childEvents.some(evt => evt.name === 'Paint')) {\n        isFirst = foundFirstPaint = true;\n      }\n      if (!foundFirstParse && node.childEvents.some(evt => evt.name === 'ParseHTML')) {\n        isFirst = foundFirstParse = true;\n      }\n\n      if (isFirst || node.duration >= minimumEvtDur) {\n        // Don't prune this node. The task is long / important so it will impact simulation.\n        continue;\n      }\n\n      // Prune the node if it isn't highly connected to minimize graph size. Rewiring the graph\n      // here replaces O(M + N) edges with (M * N) edges, which is fine if either  M or N is at\n      // most 1.\n      if (node.getNumberOfDependencies() === 1 || node.getNumberOfDependents() <= 1) {\n        PageDependencyGraph.pruneNode(node);\n      }\n    }\n  }\n\n  /**\n   * Removes the given node from the graph, but retains all paths between its dependencies and\n   * dependents.\n   */\n  static pruneNode(node: Node): void {\n    const dependencies = node.getDependencies();\n    const dependents = node.getDependents();\n    for (const dependency of dependencies) {\n      node.removeDependency(dependency);\n      for (const dependent of dependents) {\n        dependency.addDependent(dependent);\n      }\n    }\n    for (const dependent of dependents) {\n      node.removeDependent(dependent);\n    }\n  }\n\n  /**\n   * TODO: remove when CDT backend in Lighthouse is gone. Until then, this is a useful debugging tool\n   * to find delta between using CDP or the trace to create the network requests.\n   *\n   * When a test fails using the trace backend, I enabled this debug method and copied the network\n   * requests when CDP was used, then when trace is used, and diff'd them. This method helped\n   * remove non-logical differences from the comparison (order of properties, slight rounding\n   * discrepancies, removing object cycles, etc).\n   *\n   * When using for a unit test, make sure to do `.only` so you are getting what you expect.\n   */\n  static debugNormalizeRequests(lanternRequests: Lantern.NetworkRequest[]): void {\n    for (const request of lanternRequests) {\n      request.rendererStartTime = Math.round(request.rendererStartTime * 1000) / 1000;\n      request.networkRequestTime = Math.round(request.networkRequestTime * 1000) / 1000;\n      request.responseHeadersEndTime = Math.round(request.responseHeadersEndTime * 1000) / 1000;\n      request.networkEndTime = Math.round(request.networkEndTime * 1000) / 1000;\n    }\n\n    for (const r of lanternRequests) {\n      delete r.rawRequest;\n      if (r.initiatorRequest) {\n        // @ts-expect-error\n        r.initiatorRequest = {id: r.initiatorRequest.requestId};\n      }\n      if (r.redirectDestination) {\n        // @ts-expect-error\n        r.redirectDestination = {id: r.redirectDestination.requestId};\n      }\n      if (r.redirectSource) {\n        // @ts-expect-error\n        r.redirectSource = {id: r.redirectSource.requestId};\n      }\n      if (r.redirects) {\n        // @ts-expect-error\n        r.redirects = r.redirects.map(r2 => r2.requestId);\n      }\n    }\n    const requests: Lantern.NetworkRequest[] = lanternRequests\n                                                   .map(r => ({\n                                                          requestId: r.requestId,\n                                                          connectionId: r.connectionId,\n                                                          connectionReused: r.connectionReused,\n                                                          url: r.url,\n                                                          protocol: r.protocol,\n                                                          parsedURL: r.parsedURL,\n                                                          documentURL: r.documentURL,\n                                                          rendererStartTime: r.rendererStartTime,\n                                                          networkRequestTime: r.networkRequestTime,\n                                                          responseHeadersEndTime: r.responseHeadersEndTime,\n                                                          networkEndTime: r.networkEndTime,\n                                                          transferSize: r.transferSize,\n                                                          resourceSize: r.resourceSize,\n                                                          fromDiskCache: r.fromDiskCache,\n                                                          fromMemoryCache: r.fromMemoryCache,\n                                                          finished: r.finished,\n                                                          statusCode: r.statusCode,\n                                                          redirectSource: r.redirectSource,\n                                                          redirectDestination: r.redirectDestination,\n                                                          redirects: r.redirects,\n                                                          failed: r.failed,\n                                                          initiator: r.initiator,\n                                                          timing: r.timing ? {\n                                                            requestTime: r.timing.requestTime,\n                                                            proxyStart: r.timing.proxyStart,\n                                                            proxyEnd: r.timing.proxyEnd,\n                                                            dnsStart: r.timing.dnsStart,\n                                                            dnsEnd: r.timing.dnsEnd,\n                                                            connectStart: r.timing.connectStart,\n                                                            connectEnd: r.timing.connectEnd,\n                                                            sslStart: r.timing.sslStart,\n                                                            sslEnd: r.timing.sslEnd,\n                                                            workerStart: r.timing.workerStart,\n                                                            workerReady: r.timing.workerReady,\n                                                            workerFetchStart: r.timing.workerFetchStart,\n                                                            workerRespondWithSettled: r.timing.workerRespondWithSettled,\n                                                            sendStart: r.timing.sendStart,\n                                                            sendEnd: r.timing.sendEnd,\n                                                            pushStart: r.timing.pushStart,\n                                                            pushEnd: r.timing.pushEnd,\n                                                            receiveHeadersStart: r.timing.receiveHeadersStart,\n                                                            receiveHeadersEnd: r.timing.receiveHeadersEnd,\n                                                          } :\n                                                                             r.timing,\n                                                          resourceType: r.resourceType,\n                                                          mimeType: r.mimeType,\n                                                          priority: r.priority,\n                                                          initiatorRequest: r.initiatorRequest,\n                                                          frameId: r.frameId,\n                                                          fromWorker: r.fromWorker,\n                                                          isLinkPreload: r.isLinkPreload,\n                                                          serverResponseTime: r.serverResponseTime,\n                                                        }))\n                                                   .filter(r => !r.fromWorker);\n\n    const debug = requests;\n    // Set breakpoint here.\n    // Copy `debug` and compare with https://www.diffchecker.com/text-compare/\n    // eslint-disable-next-line no-console\n    console.log(debug);\n  }\n\n  static createGraph(\n      mainThreadEvents: Lantern.TraceEvent[], networkRequests: Lantern.NetworkRequest[],\n      url: Lantern.Simulation.URL): Node {\n    // This is for debugging trace/devtoolslog network records.\n    // const debug = PageDependencyGraph.debugNormalizeRequests(networkRequests);\n    const networkNodeOutput = PageDependencyGraph.getNetworkNodeOutput(networkRequests);\n    const cpuNodes = PageDependencyGraph.getCPUNodes(mainThreadEvents);\n    const {requestedUrl, mainDocumentUrl} = url;\n    if (!requestedUrl) {\n      throw new Core.LanternError('requestedUrl is required to get the root request');\n    }\n    if (!mainDocumentUrl) {\n      throw new Core.LanternError('mainDocumentUrl is required to get the main resource');\n    }\n\n    const rootRequest = Core.NetworkAnalyzer.findResourceForUrl(networkRequests, requestedUrl);\n    if (!rootRequest) {\n      throw new Core.LanternError('rootRequest not found');\n    }\n    const rootNode = networkNodeOutput.idToNodeMap.get(rootRequest.requestId);\n    if (!rootNode) {\n      throw new Core.LanternError('rootNode not found');\n    }\n    const mainDocumentRequest = Core.NetworkAnalyzer.findLastDocumentForUrl(networkRequests, mainDocumentUrl);\n    if (!mainDocumentRequest) {\n      throw new Core.LanternError('mainDocumentRequest not found');\n    }\n    const mainDocumentNode = networkNodeOutput.idToNodeMap.get(mainDocumentRequest.requestId);\n    if (!mainDocumentNode) {\n      throw new Core.LanternError('mainDocumentNode not found');\n    }\n\n    PageDependencyGraph.linkNetworkNodes(rootNode, networkNodeOutput);\n    PageDependencyGraph.linkCPUNodes(rootNode, networkNodeOutput, cpuNodes);\n    mainDocumentNode.setIsMainDocument(true);\n\n    if (NetworkNode.hasCycle(rootNode)) {\n      throw new Core.LanternError('Invalid dependency graph created, cycle detected');\n    }\n\n    return rootNode;\n  }\n\n  // Unused, but useful for debugging.\n  static printGraph(rootNode: Node, widthInCharacters = 100): void {\n    function padRight(str: string, target: number, padChar = ' '): string {\n      return str + padChar.repeat(Math.max(target - str.length, 0));\n    }\n\n    const nodes: Node[] = [];\n    rootNode.traverse(node => nodes.push(node));\n    nodes.sort((a, b) => a.startTime - b.startTime);\n\n    const min = nodes[0].startTime;\n    const max = nodes.reduce((max, node) => Math.max(max, node.endTime), 0);\n\n    const totalTime = max - min;\n    const timePerCharacter = totalTime / widthInCharacters;\n    nodes.forEach(node => {\n      const offset = Math.round((node.startTime - min) / timePerCharacter);\n      const length = Math.ceil((node.endTime - node.startTime) / timePerCharacter);\n      const bar = padRight('', offset) + padRight('', length, '=');\n\n      // @ts-expect-error -- disambiguate displayName from across possible Node types.\n      const displayName = node.request ? node.request.url : node.type;\n      // eslint-disable-next-line\n      console.log(padRight(bar, widthInCharacters), `| ${displayName.slice(0, 30)}`);\n    });\n  }\n}\n\nexport {PageDependencyGraph};\n"]}