{"version":3,"file":"ServerTiming.js","sourceRoot":"","sources":["../../../../../../front_end/core/platform/ServerTiming.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {compare} from './StringUtilities.js';\n\nexport interface NameValue {\n  name: string;\n  value: string;\n}\nconst defaultWarningMessages: ServerTimingParsingWarningMessage = {\n  deprecratedSyntax() {\n    return 'Deprecated syntax found. Please use: <name>;dur=<duration>;desc=<description>';\n  },\n  duplicateParameter(parameter) {\n    return `Duplicate parameter \"${parameter}\" ignored.`;\n  },\n  noValueFoundForParameter(parameter) {\n    return `No value found for parameter \"${parameter}\".`;\n  },\n  unrecognizedParameter(parameter) {\n    return `Unrecognized parameter \"${parameter}\".`;\n  },\n  extraneousTrailingCharacters() {\n    return 'Extraneous trailing characters.';\n  },\n  unableToParseValue(parameter, value) {\n    return `Unable to parse \"${parameter}\" value \"${value}\".`;\n  },\n};\n\nexport interface ServerTimingParsingWarningMessage {\n  deprecratedSyntax: () => string;\n  duplicateParameter: (parameter: string) => string;\n  noValueFoundForParameter: (parameter: string) => string;\n  unrecognizedParameter: (parameter: string) => string;\n  extraneousTrailingCharacters: () => string;\n  unableToParseValue: (parameter: string, value: string) => string;\n}\n\nexport class ServerTiming {\n  metric: string;\n  value: number;\n  description: string|null;\n  start: number|null;\n\n  constructor(metric: string, value: number, description: string|null, start: number|null) {\n    this.metric = metric;\n    this.value = value;\n    this.description = description;\n    this.start = start;\n  }\n\n  static parseHeaders(\n      headers: NameValue[],\n      warningMessages: ServerTimingParsingWarningMessage = defaultWarningMessages): ServerTiming[]|null {\n    const rawServerTimingHeaders = headers.filter(item => item.name.toLowerCase() === 'server-timing');\n    if (!rawServerTimingHeaders.length) {\n      return null;\n    }\n\n    const serverTimings = rawServerTimingHeaders.reduce((memo, header) => {\n      const timing = this.createFromHeaderValue(header.value, warningMessages);\n      memo.push(...timing.map(function(entry) {\n        return new ServerTiming(\n            entry.name, entry.hasOwnProperty('dur') ? entry.dur : null, entry.hasOwnProperty('desc') ? entry.desc : '',\n            entry.hasOwnProperty('start') ? entry.start : null);\n      }));\n      return memo;\n    }, ([] as ServerTiming[]));\n    serverTimings.sort((a, b) => compare(a.metric.toLowerCase(), b.metric.toLowerCase()));\n    return serverTimings;\n  }\n\n  /**\n   * TODO(crbug.com/1011811): Instead of using !Object<string, *> we should have a proper type\n   *                          with #name, desc and dur properties.\n   */\n  static createFromHeaderValue(\n      valueString: string, warningMessages: ServerTimingParsingWarningMessage = defaultWarningMessages): Array<{\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [x: string]: any,\n  }> {\n    function trimLeadingWhiteSpace(): void {\n      valueString = valueString.replace(/^\\s*/, '');\n    }\n    function consumeDelimiter(char: string): boolean {\n      console.assert(char.length === 1);\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) !== char) {\n        return false;\n      }\n\n      valueString = valueString.substring(1);\n      return true;\n    }\n    function consumeToken(): string|null {\n      // https://tools.ietf.org/html/rfc7230#appendix-B\n      const result = /^(?:\\s*)([\\w!#$%&'*+\\-.^`|~]+)(?:\\s*)(.*)/.exec(valueString);\n      if (!result) {\n        return null;\n      }\n\n      valueString = result[2];\n      return result[1];\n    }\n    function consumeTokenOrQuotedString(): string|null {\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) === '\"') {\n        return consumeQuotedString();\n      }\n\n      return consumeToken();\n    }\n    function consumeQuotedString(): string|null {\n      console.assert(valueString.charAt(0) === '\"');\n      valueString = valueString.substring(1);  // remove leading DQUOTE\n\n      let value = '';\n      while (valueString.length) {\n        // split into two parts:\n        //  -everything before the first \" or \\\n        //  -everything else\n        const result = /^([^\"\\\\]*)(.*)/.exec(valueString);\n        if (!result) {\n          return null;  // not a valid quoted-string\n        }\n        value += result[1];\n        if (result[2].charAt(0) === '\"') {\n          // we have found our closing \"\n          valueString = result[2].substring(1);  // strip off everything after the closing \"\n          return value;                          // we are done here\n        }\n\n        console.assert(result[2].charAt(0) === '\\\\');\n        // special rules for \\ found in quoted-string (https://tools.ietf.org/html/rfc7230#section-3.2.6)\n        value += result[2].charAt(1);          // grab the character AFTER the \\ (if there was one)\n        valueString = result[2].substring(2);  // strip off \\ and next character\n      }\n\n      return null;  // not a valid quoted-string\n    }\n    function consumeExtraneous(): void {\n      const result = /([,;].*)/.exec(valueString);\n      if (result) {\n        valueString = result[1];\n      }\n    }\n\n    const result = [];\n    let name;\n    while ((name = consumeToken()) !== null) {\n      const entry = {name};\n\n      if (valueString.charAt(0) === '=') {\n        this.showWarning(warningMessages['deprecratedSyntax']());\n      }\n\n      while (consumeDelimiter(';')) {\n        let paramName;\n        if ((paramName = consumeToken()) === null) {\n          continue;\n        }\n\n        paramName = paramName.toLowerCase();\n        const parseParameter = this.getParserForParameter(paramName, warningMessages);\n        let paramValue: (string|null)|null = null;\n        if (consumeDelimiter('=')) {\n          // always parse the value, even if we don't recognize the parameter #name\n          paramValue = consumeTokenOrQuotedString();\n          consumeExtraneous();\n        }\n\n        if (parseParameter) {\n          // paramName is valid\n          if (entry.hasOwnProperty(paramName)) {\n            this.showWarning(warningMessages['duplicateParameter'](paramName));\n            continue;\n          }\n\n          if (paramValue === null) {\n            this.showWarning(warningMessages['noValueFoundForParameter'](paramName));\n          }\n\n          parseParameter.call(this, entry, paramValue);\n        } else {\n          // paramName is not valid\n          this.showWarning(warningMessages['unrecognizedParameter'](paramName));\n        }\n      }\n\n      result.push(entry);\n      if (!consumeDelimiter(',')) {\n        break;\n      }\n    }\n\n    if (valueString.length) {\n      this.showWarning(warningMessages['extraneousTrailingCharacters']());\n    }\n    return result;\n  }\n\n  static getParserForParameter(paramName: string, warningMessages: ServerTimingParsingWarningMessage):\n      ((arg0: {\n         // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n         // eslint-disable-next-line @typescript-eslint/no-explicit-any\n         [x: string]: any,\n       },\n        arg1: string|null) => void)|null {\n    switch (paramName) {\n      case 'dur': {\n        function durParser(\n            entry: {\n              // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              [x: string]: any,\n            },\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            paramValue: any): void {\n          entry.dur = 0;\n          if (paramValue !== null) {\n            const duration = parseFloat(paramValue);\n            if (isNaN(duration)) {\n              ServerTiming.showWarning(warningMessages['unableToParseValue'](paramName, paramValue));\n              return;\n            }\n            entry.dur = duration;\n          }\n        }\n        return durParser;\n      }\n      case 'start': {\n        function startParser(\n            entry: {\n              // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              [x: string]: any,\n            },\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            paramValue: any): void {\n          entry.start = null;\n          if (paramValue !== null) {\n            const start = parseFloat(paramValue);\n            if (isNaN(start)) {\n              ServerTiming.showWarning(warningMessages['unableToParseValue'](paramName, paramValue));\n              return;\n            }\n            entry.start = start;\n          }\n        }\n        return startParser;\n      }\n      case 'desc': {\n        function descParser(\n            entry: {\n              // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              [x: string]: any,\n            },\n            paramValue: string|null): void {\n          entry.desc = paramValue || '';\n        }\n        return descParser;\n      }\n\n      default: {\n        return null;\n      }\n    }\n  }\n\n  static showWarning(msg: string): void {\n    console.warn(`ServerTiming: ${msg}`);\n  }\n}\n"]}